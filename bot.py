import telebot
import config
import voice
import os

API_TOKEN = config.bot_token
bot = telebot.TeleBot(API_TOKEN)

voices = voice.get_all_voices()
voice_buttons = telebot.types.ReplyKeyboardMarkup(row_width=2, resize_keyboard=True)
for v in voices:
    button = telebot.types.KeyboardButton(v['name'])
    voice_buttons.add(button)

voice_buttons.add(telebot.types.KeyboardButton("–°–∫–∞—á–∞—Ç—å –∫–∞–∫ MP3"))

selected_voice = {}
download_mp3 = {}

@bot.message_handler(commands=['start'])
def send_welcome(message):
    bot.set_my_commands([
        telebot.types.BotCommand("/start", "–ó–∞–ø—É—Å—Ç–∏—Ç—å –±–æ—Ç–∞ –∏ –≤—ã–±—Ä–∞—Ç—å –≥–æ–ª–æ—Å"),
        telebot.types.BotCommand("/help", "–ö–∞–∫ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –±–æ—Ç–∞"),
        telebot.types.BotCommand("/about", "–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –±–æ—Ç–µ"),
    ])
    bot.reply_to(message,
                 "–ü—Ä–∏–≤–µ—Ç! –Ø –±–æ—Ç –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è –æ–∑–≤—É—á–∫–∏! –í—ã–±–µ—Ä–∏ –≥–æ–ª–æ—Å, –∫–æ—Ç–æ—Ä—ã–π –±—É–¥–µ—Ç –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å—Å—è –ø—Ä–∏ —Å–æ–∑–¥–∞–Ω–∏–∏ –æ–∑–≤—É—á–∫–∏:",
                 reply_markup=voice_buttons)

@bot.message_handler(commands=['help'])
def show_help(message):
    help_text = (
        "ü§ñ *–ö–∞–∫ –ø–æ–ª—å–∑–æ–≤–∞—Ç—å—Å—è –±–æ—Ç–æ–º:*

"
        "1. –ù–∞–∂–º–∏—Ç–µ /start –∏ –≤—ã–±–µ—Ä–∏—Ç–µ –≥–æ–ª–æ—Å
"
        "2. –í–≤–µ–¥–∏—Ç–µ —Ç–µ–∫—Å—Ç, –∫–æ—Ç–æ—Ä—ã–π –Ω—É–∂–Ω–æ –æ–∑–≤—É—á–∏—Ç—å
"
        "3. –ü–æ–ª—É—á–∏—Ç–µ –≥–æ–ª–æ—Å–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –∏–ª–∏ mp3-—Ñ–∞–π–ª

"
        "üéô –ë–æ—Ç –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ—Ç –Ω–µ—Å–∫–æ–ª—å–∫–æ –≥–æ–ª–æ—Å–æ–≤ Yandex SpeechKit."
    )
    bot.send_message(message.chat.id, help_text, parse_mode="Markdown")

@bot.message_handler(commands=['about'])
def about_bot(message):
    bot.send_message(
        message.chat.id,
        "–≠—Ç–æ—Ç –±–æ—Ç –æ–∑–≤—É—á–∏–≤–∞–µ—Ç —Ç–µ–∫—Å—Ç —Å –ø–æ–º–æ—â—å—é Yandex SpeechKit. "
        "–í—ã–±–µ—Ä–∏—Ç–µ –≥–æ–ª–æ—Å –∏ –æ—Ç–ø—Ä–∞–≤—å—Ç–µ —Å–æ–æ–±—â–µ–Ω–∏–µ ‚Äî –±–æ—Ç –ø—Ä–∏—à–ª—ë—Ç –≤–∞–º –æ–∑–≤—É—á–∫—É üéß"
    )

@bot.message_handler(func=lambda message: message.text == "–°–∫–∞—á–∞—Ç—å –∫–∞–∫ MP3")
def set_mp3_download(message):
    user_id = message.from_user.id
    download_mp3[user_id] = True
    bot.send_message(user_id, "–¢–µ–ø–µ—Ä—å –æ–∑–≤—É—á–∫–∞ –±—É–¥–µ—Ç –æ—Ç–ø—Ä–∞–≤–ª—è—Ç—å—Å—è –≤ mp3 —Ñ–æ—Ä–º–∞—Ç–µ üéµ")

@bot.message_handler(func=lambda message: message.text in [v['name'] for v in voices])
def voice_selected(message):
    user_id = message.from_user.id
    selected_voice[user_id] = message.text
    bot.reply_to(message, f"–í—ã –≤—ã–±—Ä–∞–ª–∏ –≥–æ–ª–æ—Å: {message.text}. –¢–µ–ø–µ—Ä—å –≤–≤–µ–¥–∏—Ç–µ —Ç–µ–∫—Å—Ç –¥–ª—è –æ–∑–≤—É—á–∫–∏:")

@bot.message_handler(func=lambda message: True)
def generate_voice(message):
    user_id = message.from_user.id
    if user_id in selected_voice:
        voice_name = selected_voice[user_id]
        voice_id = next(v['id'] for v in voices if v['name'] == voice_name)
        is_mp3 = download_mp3.get(user_id, False)
        try:
            audio_file = voice.generate_audio(message.text, voice_id, format="mp3" if is_mp3 else "oggopus")
            with open(audio_file, 'rb') as audio:
                if is_mp3:
                    bot.send_document(user_id, audio, caption="–í–∞—à–∞ –æ–∑–≤—É—á–∫–∞ –≤ mp3 üéµ")
                else:
                    bot.send_voice(user_id, audio)
            os.remove(audio_file)
        except Exception as e:
            bot.reply_to(message, f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ –æ–∑–≤—É—á–∫–∏: {e}")
    else:
        bot.reply_to(message, "–°–Ω–∞—á–∞–ª–∞ –≤—ã–±–µ—Ä–∏—Ç–µ –≥–æ–ª–æ—Å –∫–æ–º–∞–Ω–¥–æ–π /start")

if __name__ == '__main__':
    bot.polling(none_stop=True)
